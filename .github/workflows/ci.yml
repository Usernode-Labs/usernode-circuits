name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            clang \
            cmake \
            git \
            ninja-build \
            pkg-config \
            python3 \
            python3-venv \
            libssl-dev \
            libomp-dev \
            zstd

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true

      - name: Install Noir toolchain
        run: |
          curl -fsSL https://raw.githubusercontent.com/noir-lang/noirup/main/install | bash
          ~/.nargo/bin/noirup -v v1.0.0-beta.11
          echo "$HOME/.nargo/bin" >> "$GITHUB_PATH"

      - name: Show tool versions
        run: |
          rustc --version
          cargo --version
          nargo --version

      - name: Regenerate artifacts
        run: scripts/regen_artifacts.sh

      - name: Ensure artifacts are up to date
        run: git diff --stat && git diff --exit-code

      - name: Run cargo fmt
        run: cargo fmt -- --check

      - name: Run cargo clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run cargo test
        run: cargo test

  linux-aarch64:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            binutils-aarch64-linux-gnu

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Add target
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Configure linker environment
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_RUSTFLAGS=-Clink-arg=-fuse-ld=gold" >> $GITHUB_ENV

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          shared-key: linux-aarch64

      - name: Show tool versions
        run: |
          rustc --version
          cargo --version

      - name: Cargo check for aarch64
        run: |
          cargo check --target aarch64-unknown-linux-gnu --all-targets

  macos-arm64:
    runs-on: macos-14
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install cmake ninja python3 || true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          shared-key: macos-arm64

      - name: Show tool versions
        run: |
          rustc --version
          cargo --version

      - name: Run cargo fmt
        run: cargo fmt -- --check

      - name: Run cargo clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run cargo test
        run: cargo test
